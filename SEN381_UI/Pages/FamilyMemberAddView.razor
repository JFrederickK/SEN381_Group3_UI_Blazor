@page "/FamilyMemberAddView/{clientID}"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager UriHelper
@inject IDialogService DialogService


<h3>Create Family Member</h3>
<MudIconButton Icon="@Icons.Filled.ArrowBack" Variant="Variant.Filled" Color="Color.Primary" aria-label="back" Style="margin-bottom:1%" OnClick="cancel">Back</MudIconButton>
<EditForm Model="@postdata" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="6" sm="6">
            <MudTextField T="string" Label="Name" @bind-Value=postdata.MemberName For="@(()=> postdata.MemberName)" Immediate="true"></MudTextField>
        </MudItem>
        <MudItem xs="6" sm="6">
            <MudTextField T="string" Label="Surname" @bind-Value=postdata.MemberSurname For="@(()=> postdata.MemberSurname)" Immediate="true"></MudTextField>
        </MudItem>

        <MudItem xs="12" sm="6">
            <MudTextField T="string" Label="Address" @bind-Value=postdata.Address For="@(()=> postdata.Address)" Immediate="true"></MudTextField>
        </MudItem>

        <MudItem xs="12" sm="6">
            <MudTextField T="string" Label="Email" @bind-Value=postdata.Email For="@(()=> postdata.Email)" Validation="@(new EmailAddressAttribute() {ErrorMessage = "The email address is invalid"})" Immediate="true"></MudTextField>
        </MudItem>
        <MudItem xs="6" sm="6">
            <MudTextField T="string" Label="Phone number" MaxLength="10" @bind-Value=postdata.PhoneNumber For="@(()=> postdata.PhoneNumber)" Immediate="true"></MudTextField>
        </MudItem>

        <MudItem xs="12" sm="6">
            <MudTextField T="string" Label="Role" @bind-Value=postdata.Role For="@(()=> postdata.Role)" Immediate="true"></MudTextField>
        </MudItem>

    </MudGrid>


    <MudGrid Style="margin-top:auto">
        <MudItem xs="12" sm="6">
            <MudButton Variant="Variant.Outlined" Color="Color.Secondary" FullWidth="true" OnClick="@cancel">Cancel Changes</MudButton>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" FullWidth="true" ButtonType="ButtonType.Submit" Class="ml-auto">Save Changes</MudButton>
        </MudItem>
    </MudGrid>
</EditForm>


@code {
    [Parameter]
    public string? clientID { get; set; }

    private FamilyMember postdata = new FamilyMember();
    private string id = "";
    private string name { get; set; }
    private string surname { get; set; }
    private string address { get; set; }

    private string email { get; set; }
    private string phonenumber { get; set; }
    private string role { get; set; }

    bool success;


    private async void saveFamilyMember()
    {

        FamilyMember newFam = new FamilyMember(id, postdata.MemberName, postdata.MemberSurname, postdata.PhoneNumber, postdata.Email, postdata.Address,postdata.Role,clientID);
        await new FamilyMemberService().postFamilyMember(newFam).ContinueWith((x) =>
        {
            string message = "";
            message = x.Result != null ? "Family Member was successfully created" : "Family Member could not be created";
            showDialog(message);
        });
    }

    private void OnValidSubmit(EditContext context)
    {
        success = true;
        if (success)
        {
            saveFamilyMember();
        }
        StateHasChanged();
    }
    private void cancel()
    {
        UriHelper.NavigateTo($"/FamilyMembers/{clientID}");
    }
    private async void showDialog(string message)
    {
        DialogOptions options = new DialogOptions { CloseOnEscapeKey = true };
        DialogParameters paramaters = new DialogParameters();
        paramaters.Add("ContentText", message);
        paramaters.Add("ButtonText", "Close Dialogue");
        await InvokeAsync(async () =>
        {
        var result = await DialogService.Show<Dialogue>("Family Member", paramaters, options).Result;
        if (message != "Family Member could not be created")
        {
            UriHelper.NavigateTo($"/FamilyMembers/{clientID}");
        }
        });
    }
}
