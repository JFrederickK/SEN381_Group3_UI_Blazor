@page "/MSPAddView"
@using System.ComponentModel.DataAnnotations
@inject IDialogService DialogService
@inject NavigationManager navigate;

<h3>Create Medical service Provider</h3>
<MudIconButton Icon="@Icons.Filled.ArrowBack" Variant="Variant.Filled" Color="Color.Primary" aria-label="back" Style="margin-bottom:1%" Href="/MedicalServiceProvider">Back</MudIconButton>
<MudGrid>
    <MudItem xs="6" sm="6">
        <MudTextField T="string" Label="Name" @bind-Value="providerName"></MudTextField>
    </MudItem>
    <MudItem xs="12" sm="6">
        <MudTextField T="string" Label="Address" @bind-Value="providerAddress"></MudTextField>
    </MudItem>
    <MudItem xs="12" sm="6">
        <MudTextField T="string" Label="Email" @bind-Value="Email"></MudTextField>
    </MudItem>
    <MudItem xs="12" sm="6">
        <MudTextField T="string" Label="Phone number" MaxLength="10" @bind-Value="providerPhone"></MudTextField>
    </MudItem>
</MudGrid>

<MudGrid Style="margin-top:auto">
    <MudItem xs="12" sm="6">
        <MudButton OnClick="@insertProvider" Variant="Variant.Outlined" Color="Color.Primary" FullWidth="true">Create Provider</MudButton>
    </MudItem>
</MudGrid>
@code {
    public string providerName { get; set; }

    public string providerAddress { get; set; }

    [EmailAddress]
    public string Email { get; set; }

    public string providerPhone { get; set; }
    protected override void OnInitialized()
    {
    }

    private async void insertProvider(){
        await new MedicalServiceProviderService().addProvider(new MedicalServiceProvider("temp",providerName,providerAddress,Email,providerPhone)).ContinueWith((x)=>{
            string message = x.Result!=null ?"Provider created sucessfully":"Provider could not be created";
            showDialog(message);
        });
    }


    private async void showDialog(string message)
    {
        DialogOptions options = new DialogOptions { CloseOnEscapeKey = true };
        DialogParameters paramaters = new DialogParameters();
        paramaters.Add("ContentText", message);
        paramaters.Add("ButtonText", "Close Dialogue");
        await InvokeAsync(async () =>
        {
            var result = await DialogService.Show<Dialogue>("Medical Service Provider", paramaters, options).Result;
            if (message != "Provider could not be created")
            {
                navigate.NavigateTo("/MedicalServiceProvider");
            }
        });
    }
}
