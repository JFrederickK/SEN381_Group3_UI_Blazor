@page "/Coverages"
@using SEN381_UI.Data
@inject NavigationManager UriHelper
<h3>Coverages Component</h3>
<MudGrid>
    <MudTable Items="@Elements" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<TreatmentCoverage,bool>(FilterFunc)" @bind-SelectedItem="selectedItem" SortLabel="Sort by">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Coverages</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Nr</MudTh>
            <MudTh>Description</MudTh>
            <MudTh>General Visits</MudTh>
            <MudTh>Specialists Visits</MudTh>
            <MudTh>Coverage User</MudTh>

        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nr">@context.coverageID</MudTd>
            <MudTd DataLabel="Description">@context.coverageDescription</MudTd>
            <MudTd DataLabel="General Visits">@context.numberOfGeneralVisits</MudTd>
            <MudTd DataLabel="Specialists Visits">@context.numberOfSpecialistsVisits</MudTd>
            <MudTd DataLabel="Coverage User">@context.totalCoverageUser</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>

</MudGrid>
<MudItem Style="margin-top:1%">
    <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" Style="margin-top:1%;margin-top:1%" Href="/AddCoverage"/>
    @if (selectedItem != null)
    {
        <MudFab Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Edit" Style="margin-top:1%;margin-left:1%" OnClick="OnClick" />
    }
</MudItem>



@code {
    private bool dense = false;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = true;
    private string searchString = "";
    private TreatmentCoverage selectedItem = null;
    private HashSet<TreatmentCoverage> selectedItems = new HashSet<TreatmentCoverage>();

    private IEnumerable<TreatmentCoverage> Elements = new List<TreatmentCoverage>();
    protected override void OnInitialized()
    {
        Elements = new CoverageMock().GetCoverages();
    }

    private bool FilterFunc(TreatmentCoverage element) => FilterFunc(element, searchString);

    private bool FilterFunc(TreatmentCoverage element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.coverageID == Int32.Parse(searchString))
            return true;
        return false;
    }
        private void OnClick()
        {
            UriHelper.NavigateTo($"/CoverageDV/{selectedItem.CoverageID}");
        }
    }

