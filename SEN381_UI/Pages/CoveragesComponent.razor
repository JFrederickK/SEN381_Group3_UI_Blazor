@page "/Coverages"
@using SEN381_UI.Data
@using SEN381_UI.Shared.MockData
@inject NavigationManager UriHelper

<h3>Coverages Component</h3>
<MudTable Items="@Elements" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped"
          Filter="new Func<Coverage,bool>(FilterFunc)" @bind-SelectedItem="selectedItem"
        SortLabel="Sort by"
        T="Coverage"
        OnRowClick="@navigate"
>
    <ToolBarContent>
        <MudText Typo="Typo.h6">Coverages</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Nr</MudTh>
        <MudTh>Description</MudTh>
        <MudTh>General Visits</MudTh>
        <MudTh>Specialists Visits</MudTh>
        <MudTh>Coverage User</MudTh>

        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nr">@context.CoverageID</MudTd>
            <MudTd DataLabel="Description">@context.CoverageDescription</MudTd>
            <MudTd DataLabel="General Visits">@context.NumberOfGeneralVisits</MudTd>
            <MudTd DataLabel="Specialists Visits">@context.NumberOfSpecialistsVisits</MudTd>
            <MudTd DataLabel="Coverage User">@context.TotalCoverageUser</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager SelectedChanged="PageChanged" Count="totalSize)"/>
        </PagerContent>
    </MudTable>

<MudItem Style="margin-top:1%">
    <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" Style="margin-top:1%;margin-top:1%" Href="/AddCoverage"/>
</MudItem>



@code {
    private bool dense = false;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = true;
    private string searchString = "";
    private Coverage selectedItem = null;
    private List<Coverage> selectedItems = new List<Coverage>();

    //Pagination
    private int page=1;
    private int size=5;
    private int totalSize=10;
    private int totalPages= 2;

    private List<Coverage> Elements = new List<Coverage>();
    protected async override Task OnInitializedAsync()
    {
        CoverageService cs = new CoverageService();
        await cs.getCoverages(5, 1).ContinueWith((x) =>
        {
            Elements = x.Result;
        });

    }

    private bool FilterFunc(Coverage element) => FilterFunc(element, searchString);

    private bool FilterFunc(Coverage element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.CoverageID.ToString() == searchString)
            return true;
        return false;
    }

    private void navigate(TableRowClickEventArgs<Coverage> p)
    {
        UriHelper.NavigateTo($"/Coverage/{p.Item.CoverageID}");
    }

    private void PageChanged(int i)
    {
        
    }
}

