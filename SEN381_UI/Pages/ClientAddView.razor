@page "/ClientAddView"
@using System.ComponentModel.DataAnnotations 
@using SEN381_UI.Data
@using SEN381_UI.Shared.MockData
@using SEN381_UI.BusinessLayer
@inject NavigationManager UriHelper
@inject IDialogService DialogService


<h3>Client Add View</h3>
<MudIconButton Icon="@Icons.Filled.ArrowBack" Variant="Variant.Filled" Color="Color.Primary" aria-label="back" Style="margin-bottom:1%" Href="/ClientListView">Back</MudIconButton>
<EditForm Model="@postdata" OnValidSubmit="OnValidSubmit">
    <MudGrid>

    <MudItem xs="6" sm="6">

    </MudItem>

    <MudItem xs="6" sm="6">
            <MudTextField T="string" Label="Name" @bind-Value=@name></MudTextField>
    </MudItem>

    <MudItem xs="6" sm="6">
            <MudTextField T="string" Label="Surname" @bind-Value=@surname></MudTextField>
    </MudItem>

    <MudItem xs="12" sm="6">
            <MudTextField T="string" Label="Address" @bind-Value=@address></MudTextField>
    </MudItem>

    <MudItem xs="12" sm="6">
            <MudTextField T="string" Label="Email" @bind-Value=@email></MudTextField>
    </MudItem>
    <MudItem xs="6" sm="6">
            <MudTextField T="string" Label="Phone number" MaxLength="10" @bind-Value=@phonenumber></MudTextField>
    </MudItem>

    <MudItem xs="6" sm="6">
            <MudTextField T="string" Label="Policies" @bind-Value=@clientpolicies></MudTextField>
    </MudItem>

    <MudItem xs="12" sm="6">
            <MudTextField T="string" Label="Status" @bind-Value=@status></MudTextField>
    </MudItem>

    <MudItem xs="12" sm="6">
            <MudTextField T="string" Label="Notes" @bind-Value=@notes></MudTextField>
    </MudItem>

</MudGrid>

<MudGrid>
        @*Different Packages*@
            <MudItem lg="12" sm="6">
                <MudExpansionPanel class="h-25" Text="Policy Packages">

                    <MudExpansionPanels style="max-height:400px; overflow: auto;" class="accordion-body">
                    @foreach (Package package in packages)
                    {
                        string text = $"Package ID:{@package.PackageID}";
                                <MudGrid>
                                    <MudItem xs="9">
                                        <MudExpansionPanel Text="@text">
                                    @foreach (TreatmentCoverage item in package.TreatmentCoverages)
                                    {

                                                    <MudCard class="mt-2 p-2">
                                                        <MudText Align="Align.Center"> Treatment: @item.Treatment.TreatmentName </MudText>
                                                        <MudText Align="Align.Center"> Coverage Level: @item.Coverage.CoverageDescription </MudText>
                                                    </MudCard>

                                    }

                                        </MudExpansionPanel>
                                    </MudItem>
                                    <MudItem xs="3">
                                        <MudText Align="Align.Center">
                                            <MudCheckBox @bind-Checked="@Basic_CheckBox1"></MudCheckBox>
                                        </MudText>
                                    </MudItem>
                                </MudGrid>
                    }
                    </MudExpansionPanels>
                </MudExpansionPanel>
            </MudItem>
</MudGrid>


<MudGrid Style="margin-top:auto">
    <MudItem xs="12" sm="6">
            <MudButton Variant="Variant.Outlined" Color="Color.Secondary" FullWidth="true" OnClick="@cancel">Cancel Changes</MudButton>
    </MudItem>
    <MudItem xs="12" sm="6">
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" FullWidth="true" OnClick="saveClint" ButtonType="ButtonType.Submit" Class="ml-auto">Save Changes</MudButton>
    </MudItem>
</MudGrid>
</EditForm>


@code {
    private Client postdata = new Client();
    private string id = "";
    private string name { get; set; }
    private string surname { get; set; }
    private string address { get; set; }

    private string email { get; set; }
    private string phonenumber { get; set; }
    private string clientpolicies { get; set; }
    private string status { get; set; }
    private string notes { get; set; }


    public bool Basic_CheckBox1 = true;

    public List<Package> packages = new PackageMock().getPackages();
    private async void saveClint()
    {
        Client newClient = new Client(id, name, surname, address, email, phonenumber, clientpolicies, status, notes);
        await new ClientService().postClientDetails(newClient).ContinueWith((x) =>
        {
            Console.WriteLine(  x.Result.ClientPhoneNumber);
            string message = "";
            message = x.Result != null ? "Client is successfully created" : "Client could not be created";
            showDialog(message);
        });



    }

    private void OnValidSubmit(EditContext context)
    {
        StateHasChanged();
    }
    private void cancel()
    {
        UriHelper.NavigateTo("/ClientListView");
    }
    private async void showDialog(string message)
    {
        DialogOptions options = new DialogOptions { CloseOnEscapeKey = true };
        DialogParameters paramaters = new DialogParameters();
        paramaters.Add("ContentText", message);
        paramaters.Add("ButtonText", "Close Dialogue");
        await InvokeAsync(async () =>
        {
            var result = await DialogService.Show<Dialogue>("Client", paramaters, options).Result;
            if (message != "Coverage could not be created")
            {
                UriHelper.NavigateTo("/ClientListView");
            }
        });
    }
}
