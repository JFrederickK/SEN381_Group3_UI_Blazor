@page "/MedicalServiceProvider"
@using SEN381_UI.Data
@using SEN381_UI.Shared.MockData
@inject NavigationManager UriHelper
<h3>Medical Service Provider</h3>
<MudIconButton Icon="@Icons.Filled.ArrowBack" Variant="Variant.Filled" Color="Color.Primary" aria-label="back" Style="margin-bottom:1%" >Back</MudIconButton>

    <MudTable Items="@Elements" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<MedicalServiceProvider,bool>(FilterFunc)" @bind-SelectedItem="selectedItem" SortLabel="Sort by">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Medical Service Provider</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Nr</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Adress</MudTh>
            <MudTh>Email</MudTh>
            <MudTh>Phone</MudTh>

        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nr">@context.PolicyProviderID</MudTd>
            <MudTd DataLabel="Name">@context.PolicyProviderName</MudTd>
            <MudTd DataLabel="Adress">@context.PolicyProviderAddresses</MudTd>
            <MudTd DataLabel="Email">@context.PolicyProviderEmail</MudTd>
            <MudTd DataLabel="Phone">@context.PolicProviderPhone</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>


<MudItem Style="margin-top:2%">
    <MudFab Color="Color.Success" StartIcon="@Icons.Material.Filled.Add" Href="/MSPAddView" />
        @if (selectedItem != null)
        {
            <MudFab Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Edit" Style="margin-left:1%" OnClick="OnClick" />
        }
</MudItem>


@code {
    private bool hover = true;
    private bool striped = true;
    private bool bordered = true;
    private string searchString = "";
    private MedicalServiceProvider selectedItem = null;
    private HashSet<MedicalServiceProvider> selectedItems = new HashSet<MedicalServiceProvider>();

    private IEnumerable<MedicalServiceProvider> Elements = new List<MedicalServiceProvider>();

    protected override void OnInitialized()
    {
        Elements = new ProviderMock().GetMedicalServiceProviders();
    }
    private bool FilterFunc(MedicalServiceProvider element) => FilterFunc(element, searchString);

    private bool FilterFunc(MedicalServiceProvider element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.PolicyProviderID.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.PolicyProviderName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.PolicyProviderAddresses.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.PolicyProviderEmail.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.PolicProviderPhone.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.PolicyProviderID} {element.PolicyProviderName} {element.PolicyProviderAddresses} {element.PolicyProviderEmail} {element.PolicProviderPhone}".Contains(searchString))
            return true;
        return false;
    }


    public void OnClick() {
        UriHelper.NavigateTo($"/MSPDetailedView/{selectedItem.PolicyProviderID}");
    }
}
